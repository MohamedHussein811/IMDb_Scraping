# -*- coding: utf-8 -*-
"""IMDb Scraping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xuRF1YZRq45qyx68S-PICX3pi9KlVny8
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import os
import time
import csv

URL_list = 'https://m.imdb.com/chart/moviemeter/'

headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'}
r = requests.get(URL_list, headers=headers)
r

soup = BeautifulSoup(r.text , 'html.parser')

ul = soup.findAll('li',{'class':'ipc-metadata-list-summary-item sc-10233bc-0 iherUv cli-parent'})
a_hrefs_list = []
for link in ul:
  links = link.find('a',{'class':'ipc-lockup-overlay ipc-focusable'})
  a_hrefs_list.append("https://m.imdb.com" + links['href'])

titles = []
years = []
durations = []
images = []
genres_list = []
stars_list = []
directorNames = []
ratings = []

for link in a_hrefs_list:
    r2 = requests.get(link, headers=headers)
    soup = BeautifulSoup(r2.content, 'html.parser')

    title = soup.find('span', {'class': 'hero__primary-text'}).text.strip()
    titles.append(title)

    ul = soup.find('ul', {'class': 'ipc-inline-list ipc-inline-list--show-dividers sc-d8941411-2 cdJsTz baseAlt'})
    li = ul.findAll('li', {'class': 'ipc-inline-list__item'})
    if len(li) > 2:
        durations.append(li[2].text.strip())
    else:
        durations.append("Not Found")

    year = ul.find('a', {'class': 'ipc-link ipc-link--baseAlt ipc-link--inherit-color'}).text.strip()
    if len(year) > 1:
        years.append(year)
    else:
        years.append("Not Found")

    img = soup.find('img', {'class': 'ipc-image'})
    images.append(img['src'])

    genreDiv = soup.find('div', {'class': 'ipc-chip-list__scroller'})
    Allgenres = genreDiv.findAll('span', {'class': 'ipc-chip__text'})

    starsUl = soup.find('ul',{'class':'ipc-metadata-list ipc-metadata-list--dividers-all title-pc-list ipc-metadata-list--baseAlt'})
    starsLi = starsUl.find('li',{'class':'ipc-metadata-list__item ipc-metadata-list-item--link'})
    starsDiv = starsLi.find('div',{'class':'ipc-metadata-list-item__content-container'})
    AllStars = starsDiv.findAll('a',{'class':'ipc-metadata-list-item__list-content-item ipc-metadata-list-item__list-content-item--link'})

    directorDiv = soup.find('li',{'class':'ipc-metadata-list__item'})
    dirname = directorDiv.find('a',{'class':'ipc-metadata-list-item__list-content-item ipc-metadata-list-item__list-content-item--link'}).text.strip()
    directorNames.append(dirname)

    ratingDiv = soup.find('div',{'class':'sc-bde20123-2 cdQqzc'})
    if(ratingDiv):
      ratings.append(ratingDiv.find('span',{'class':'sc-bde20123-1 cMEQkK'}).text.strip())
    else:
      ratings.append("No Rating")

    genres_for_link = []
    stars_for_link = []

    for genre in Allgenres:
        genres = genre.text.strip().split(', ')
        genres_for_link.extend(genres)

    for star in AllStars:
      stars = star.text.strip().split(', ')
      stars_for_link.extend(stars)


    genres_list.append(genres_for_link)
    stars_list.append(stars_for_link)

movies_data = []
for i in range(len(titles)):
    movie = {
        'Title': titles[i],
        'Year': years[i],
        'Duration': durations[i],
        'Image': images[i],
        'Genres': ', '.join(genres_list[i]),
        'Stars': ', '.join(stars_list[i]),
        'Director': directorNames[i],
        'Rating': ratings[i]
    }
    movies_data.append(movie)

with open('movies_data.csv', 'w', newline='', encoding='utf-8') as csvfile:
    fieldnames = ['Title', 'Year', 'Duration', 'Image', 'Genres', 'Stars', 'Director', 'Rating']
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

    writer.writeheader()
    for movie in movies_data:
        writer.writerow(movie)

df = pd.read_csv('movies_data.csv')
df



from matplotlib import pyplot as plt
df['Year'].plot(kind='hist', bins=20, title='Year')
plt.gca().spines[['top', 'right',]].set_visible(False)